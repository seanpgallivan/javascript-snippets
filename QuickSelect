const quickSelect = (arr, target, comp) => {
    comp ||= (a,b) => a - b
    let left = 0, right = arr.length - 1
    while (true) {
        let i = left, j = left, k = right, 
            pivot = arr[findPivot(arr, left, right, comp)]
        while (j <= k) {
            let result = comp(arr[j], pivot)
            if (result < 0)
                swap(arr, i++, j++)
            else if (result > 0)
                swap(arr, j, k--)
            else
                j++
        }
        if (target < i)
            right = i - 1
        else if (target > j)
            left = k + 1
        else
            return arr
    }
};
const findPivot = (arr, left, right, comp) => {
    let mid = left + right >> 1
    if (comp(left, right) > 0)
        swap(arr, left, right)
    if (comp(left, mid) > 0)
        swap(arr, left, mid)
    if (comp(mid, right) > 0)
        swap(arr, mid, right)
    return mid
}
const swap = (arr, a, b) => {
    let temp = arr[a]
    arr[a] = arr[b], arr[b] = temp
}
